#!/bin/bash
#
# Changes every file starting at the PWD by replacing a specfic char with
# another char.

set -e

# constants and defined cli parameters, opt ==> option
PROGRAM_NAME="$(basename "$0")"
readonly PROGRAM_NAME
readonly FALSE=0
readonly TRUE=1
readonly HELP_SHORT_OPT="h"
readonly HELP_LONG_OPT="help"
# combining all short opts to form shortopts for getopt
readonly short_opts="${HELP_SHORT_OPT}"

help_option="${FALSE}"
# do not combine long opts into their own variable
eval set -- "$(getopt --options "${short_opts}" --long "${HELP_LONG_OPT}" --name "${PROGRAM_NAME}" -- "$@")"

# determine behavior of program from cli arguments,
# cli ==> command line interface
while true; do
    case "$1" in
        "-${HELP_SHORT_OPT}" | "--${HELP_LONG_OPT}")    help_option="${TRUE}"; shift ;;
        "--")                                           shift; break ;;
        *)                                              break ;;
    esac
done

if (( help_option )); then
        cat << _EOF_
Usage: ${PROGRAM_NAME} [-${HELP_SHORT_OPT}] [FROM_CHAR] [TO_CHAR]

Recursively replaces a character in each file starting in the present working
directory (PWD) with another character.

Options:
    -${HELP_SHORT_OPT}, --${HELP_LONG_OPT}      show this help message and exit

_EOF_
    exit 0
fi

from_char="$1"
to_char="$2"
files="$(find "${PWD}" \( -iname "*${from_char}*" \) -and \( -not -ipath "${PWD}" \) )"
old_ifs="${IFS}"
IFS=$'\n'

for fil in ${files}; do 
    transformed_fil="$(echo "${fil}" | tr "${from_char}" "${to_char}")";
    cd "$(dirname "${fil}")" || exit
    mv "$(basename "${fil}")" "$(basename "${transformed_fil}")";
    cd - > /dev/null || exit
done

IFS="${old_ifs}"

exit 0
